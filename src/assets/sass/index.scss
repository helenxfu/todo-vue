@import "./base/variables";

@import "./components/menu";
@import "./components/addNewTask";
@import "./components/editModal";
@import "./components/header";
@import "./components/taskTable";

* {
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Noto Serif SC", serif;
  font-size: 14px;
  color: $body-font;
}
img {
  width: 100%;
}
input,
button {
  border: none;
  outline: none;
  text-decoration: none;
}
.noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

button {
  cursor: pointer;
  text-decoration: none;
  padding: 5px;
  transition-duration: 0.3s;
  background-color: rgba(0, 0, 0, 0);
}
button {
  cursor: pointer;
  transition-property: filter;
  transition-duration: 1s;
}
button:hover {
  filter: hue-rotate(270deg);
}
button:active {
  transform: translateY(1px);
  box-shadow: none;
}
button:disabled {
  cursor: default;
  color: $menu-btn-disabled;
}
.mainContainer {
  display: flex;
}

.mainBody {
  flex-grow: 2;
}

.bodyContainer {
  padding: 30px;
  background-color: $body-container;
}

.tableContainer {
  overflow: auto;
}
.noItems {
  margin-top: 60px;
  margin-bottom: 30px;
  margin-right: 25px;
  text-align: center;
}
.noItemsText {
  margin-top: 20px;
  margin-left: 25px;
}

td {
  border: 1px solid $th-border;
  padding: 2px 2px;
}
.buttonTd {
  padding: 0;
}
.buttonWrapper {
  display: flex;
  align-items: stretch;
  justify-content: center;
}
.buttonWrapper button {
  padding: 4px;
  border-radius: 4px;
}
.buttonWrapper button:hover {
  background-color: $td-btn-hover;
}
.hideMe {
  display: none;
}
.rightAlign {
  text-align: right;
}
.pointer {
  cursor: pointer;
  padding-left: 5px;
  display: flex;
  align-content: center;
}
.checkIcon {
  width: 15px;
  margin-right: 2px;
  margin-bottom: 1px;
  stroke-width: 2;
  stroke-linecap: round;
}
.completed {
  background-color: $completed;
}
.passed {
  background-color: $passed;
}
.priorityLow {
  background-color: $priority-low;
}
.priorityMid {
  background-color: $priority-mid;
}
.priorityHigh {
  background-color: $priority-high;
}
.completed:hover {
  background-color: $completed-hover;
  color: $completed-hover-text;
}
.passed:hover {
  background-color: $passed-hover;
}
.priorityLow:hover {
  background-color: $priority-low-hover;
}
.priorityMid:hover {
  background-color: $priority-mid-hover;
}
.priorityHigh:hover {
  background-color: $priority-high-hover;
}

svg {
  transition: all 1s linear;
}
.check {
  stroke: $check-stroke;
  fill: $check-fill;
}
.uncheck {
  stroke: $uncheck-stroke;
  fill: $uncheck-fill;
}

.emptySvg {
  margin: 0 auto;
  width: 200px;
  .shadow {
    fill: url(#linear-gradient);
  }
  .shadowColor {
    stop-color: $bottle-shadow;
  }

  .bottle-line,
  .bottle-line-2,
  .cap-line,
  .cap-line-2,
  .task {
    fill: none;
  }

  .bottle-line,
  .bottle-line-2,
  .cap-line,
  .cap-line-2 {
    stroke: $bottle;
    stroke-width: 3px;
  }

  .bottle-line,
  .cap-line-2,
  .task {
    stroke-miterlimit: 10;
  }

  .bottle-fill {
    fill: $bottle;
  }

  .bottle-line-2,
  .cap-line-2 {
    stroke-linecap: round;
  }

  .bottle-line-2,
  .cap-line {
    stroke-linejoin: round;
  }

  .task {
    stroke-width: 8px;
  }

  .task-high {
    stroke: $task-high;
  }
  .task-mid {
    stroke: $task-mid;
  }
  .task-low {
    stroke: $task-low;
  }
}

@media only screen and (max-width: 700px) {
  .mainContainer {
    flex-direction: column-reverse;
  }
  .bodyContainer {
    padding: 15px;
  }
  .menu {
    width: 100%;
    min-height: initial;

    button {
      display: inline-block;
      margin: 3px;
    }
  }
}

@media only screen and (max-width: 550px) {
  .bodyContainer {
    padding: 10px;
  }
  .addNewTask {
    form {
      flex-direction: column;
    }
    input[type="date"] {
      width: 100%;
    }
    .priority {
      padding: 0;
    }
    input[type="submit"],
    input[type="reset"] {
      align-self: auto;
    }
  }
}
